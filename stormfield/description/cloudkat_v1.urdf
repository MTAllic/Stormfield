<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from cloudkat_v1.urdf.xacro         | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="robot">
  <!-- This is an example of a URDF. -->
  <!-- As we move through the file, new things to note will be pointed out. -->
  <!-- It's not meant an example of GOOD design, but an example of some of the various features of URDF/xacro. -->
  <!-- This file is not a robot in and of itself, it just contains some useful tags that could be included in any robot -->
  <!-- Specify some colours -->
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="orange">
    <color rgba="1 0.3 0.1 1"/>
  </material>
  <material name="blue">
    <color rgba="0.2 0.2 1 1"/>
  </material>
  <!-- Specify some standard inertial calculations https://en.wikipedia.org/wiki/List_of_moments_of_inertia -->
  <!-- These make use of xacro's mathematical functionality -->
  <!-- This first link called "world" is empty -->
  <link name="world"/>
  <!-- A simple fixed joint from our empty world link, to our base. -->
  <!-- The base origin is offset from the world origin. -->
  <joint name="base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="1.5 1.0 0"/>
    <parent link="world"/>
    <child link="slider_link"/>
  </joint>
  <!-- base_link is a large rectangular plate. Some things to note: -->
  <!-- - We set the visual origin Z to half the box height, so that the link origin sits at the bottom of the box -->
  <!-- - We set the collision to be identical to the visual -->
  <!-- - We specified the colour manually (but still need to enter a name) -->
  <!-- - We specified all the inertial parameters manually -->
  <!-- slider_joint lets slider_link move back and forth along the top of the base in one dimension.  -->
  <!-- - Origin is set to one of the top edges of the base_link box, so that our link skims across the top  -->
  <!-- - It moves along the X axis -->
  <!-- - We need to specify limits for the motion -->
  <!-- slider_link is the box skimming across the top of the base. Its parameters are similar to the base_link, however: -->
  <!-- - Instead of explicitly describing a colour, it uses the named material "blue". It knows about "blue" that material was included in example_include.xacro. -->
  <!-- - Instead of explicitly describing the inertia, we use a macro that was defined in the example_include.xacro -->
  <link name="slider_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://stormfield/description/meshes/stl/Frame_1000.stl"/>
      </geometry>
      <material name="blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://stormfield/description/meshes/stl/Frame_1000.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.075"/>
      <mass value="0.5"/>
      <inertia ixx="0.003541666666666666" ixy="0.0" ixz="0.0" iyy="0.011354166666666667" iyz="0.0" izz="0.013020833333333332"/>
    </inertial>
  </link>
  <!-- arm_joint describes the rotation of the arm and is centred around the top corner of the slider box. -->
  <!-- - The axis of rotation is -1 in Y, so that positive is "up" -->
  <!-- - The upper limit uses xacro's mathematical features -->
</robot>
